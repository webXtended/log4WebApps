/*!
 * Log4WebApps v1.0
 *
 * Copyright 2015, Himanshu Tanwar
 * Released under the MIT license
 * https://github.com/webXtended/log4WebApps
 * Date: 2015-11-21
 */

(function(){"use strict";var log4WebApp={},logLevels={},logs={},logFunctions;defineLogLevels();window.log4WebApp=log4WebApp;function Log4WebApp(logName,options){var logs=[],oldLogLevel,currentLogLevel,logStyle;logName=logName||"WebAppLog_"+new Date().getTime();currentLogLevel=options.level&&options.level>0&&options.level<6?options.level:1;function saveLog(obj){logs.push(obj)}function getStoredLog(){var savedLog;if(window.localStorage&&window.localStorage.getItem){savedLog=window.localStorage.getItem(logName)}else{savedLog=JSON.stringify(logs)}return savedLog?savedLog:"[]"}function getLogEntryString(obj){var log=[];log.push(obj.date.toLocaleString());log.push(logLevels.name[obj.type]);log.push(obj.msg);return log.join(" - ")}function printLogObj(obj){var css=[];switch(obj.type){case logLevels.ERROR:css.push("color:#E02200");break;case logLevels.WARNING:css.push("color:#EAC806");break;case logLevels.INFO:css.push("color:#159F33");break;case logLevels.DEBUG:css.push("color:#15489F");break;case logLevels.TRACE:css.push("color:#620DC2");break;default:css.push("color:#00000");break}css.push("font-size:15px");css.push("background-color:#000");css.push("padding:5px");window.console.log("%c"+getLogEntryString(obj),css.join(";"))}function addLog(msg,type){var logContainer=getLogContainer();logContainer.msg=msg;logContainer.type=type;saveLog(logContainer)}this.addErrorLog=function(msg){if(currentLogLevel>=logLevels.ERROR){addLog(msg,logLevels.ERROR)}};this.addWarningLog=function(msg){if(currentLogLevel>=logLevels.WARNING){addLog(msg,logLevels.WARNING)}};this.addInfoLog=function(msg){if(currentLogLevel>=logLevels.INFO){addLog(msg,logLevels.INFO)}};this.addDebugLog=function(msg){if(currentLogLevel>=logLevels.DEBUG){addLog(msg,logLevels.DEBUG)}};this.addTraceLog=function(msg){if(currentLogLevel>=logLevels.TRACE){addLog(msg,logLevels.TRACE)}};this.printLogs=function(){var i;window.console.log("%cPrinting logs for - "+logName,"font-size:20px");for(i=0;i<logs.length;i++){printLogObj(logs[i])}};this.getLogsAsString=function(){var i,logArr=[];for(i=0;i<logs.length;i++){logArr.push(getLogEntryString(logs[i]))}return logArr.join("\n")};this.clearLogs=function(){logs=[];if(window.localStorage&&window.localStorage.removeItem){window.localStorage.removeItem(logName)}};this.setLogLevel=function(logLevel){if(logLevel>0&&logLevel<6){oldLogLevel=currentLogLevel;currentLogLevel=logLevel;return true}else{return false}};this.stopLogging=function(){if(oldLogLevel===0){return}oldLogLevel=currentLogLevel;currentLogLevel=0};this.startLogging=function(logLevel){if(logLevel&&logLevel>0&&logLevel<6){currentLogLevel=logLevel}else{currentLogLevel=oldLogLevel}};this.saveToLocalStorage=function(){if(window.localStorage&&window.localStorage.setItem){window.localStorage.setItem(logName,JSON.stringify(logs));return true}else{return false}}}function initWebLogger(logName,options){if(logs[logName]){if(options.override&&options.override===true){getLogger(logName).clearLogs();removeLogger(logName);return createLogger()}else{throw Error("A logger by this name already exists");}}else{return createLogger()}function createLogger(){logs[logName]=new Log4WebApp(logName,options);return logs[logName]}}function removeLogger(logName){if(logs[logName]){logs[logName]=undefined}}function getLogger(logName){return logs[logName]}function getLogContainer(){var logContainer={};logContainer.date=new Date();return logContainer}function defineLogLevels(){logLevels={};logLevels.ERROR=1;logLevels.WARNING=2;logLevels.INFO=3;logLevels.DEBUG=4;logLevels.TRACE=5;logLevels.name={};logLevels.name[logLevels.ERROR]="ERROR";logLevels.name[logLevels.WARNING]="WARNING";logLevels.name[logLevels.INFO]="INFO";logLevels.name[logLevels.DEBUG]="DEBUG";logLevels.name[logLevels.TRACE]="TRACE"}log4WebApp.createLogger=function(logName,options){return initWebLogger(logName,options?options:{})};log4WebApp.getLogger=function(logName){return getLogger(logName)};log4WebApp.removeLogger=function(logName){return removeLogger(logName)}})();
